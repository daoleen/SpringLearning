<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <tx:annotation-driven transaction-manager="transactionManager" />

    <jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="schema.sql" />
        <jdbc:script location="data.sql" />
    </jdbc:embedded-database>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf" />
    </bean>

    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="packagesToScan" value="com.daoleen.springlearning.jpa.domain" />
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.max_fetch_depth">3</prop>
                <prop key="hibernate.jdbc.fetch_size">50</prop>
                <prop key="hibernate.jdbc.batch_size">10</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <jpa:repositories base-package="com.daoleen.springlearning.jpa.repository"
                      entity-manager-factory-ref="emf"
                      transaction-manager-ref="transactionManager"/>


    <!-- для @Autowired на CrudRepository<Entity, ID:serializable> -->
    <context:annotation-config />

    <!-- для поиска по аннотациям @Service, @Repository -->
    <context:component-scan base-package="com.daoleen.springlearning.jpa.implementation"/>

    <!-- для ручного связывания бина -->
    <!--<bean id="telephoneService" class="com.daoleen.springlearning.hibernate.springlearning.jpa.implementation.TelephoneService" />-->
    <!--<bean id="bookService" class="com.daoleen.springlearning.hibernate.springlearning.jpa.implementation.BookService" />-->
    <!--<bean id="authorService" class="com.daoleen.springlearning.hibernate.springlearning.jpa.implementation.AuthorService" />-->

</beans>